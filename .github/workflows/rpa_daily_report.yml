name: RPA Relat√≥rio Di√°rio - Agendamentos

on:
  schedule:
    # Executa √†s 17:30 (hor√°rio de S√£o Paulo) de segunda a sexta-feira
    # Cron: minuto hora dia m√™s dia_da_semana
    # 30 20 * * 1-5 = 20:30 UTC (17:30 BRT) - Segunda a Sexta
    - cron: '30 20 * * 1-5'  # 17:30 BRT (20:30 UTC)
  
  # Permite execu√ß√£o manual
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Modo de teste (sem interface gr√°fica)'
        required: false
        default: 'false'
        type: boolean

env:
  # Configura√ß√£o do fuso hor√°rio
  TZ: America/Sao_Paulo
  
  # Configura√ß√µes do RPA
  HEADLESS: true
  CI: true
  GITHUB_ACTIONS: true

jobs:
  rpa-daily-report:
    name: Enviar Relat√≥rio Di√°rio de Agendamentos
    runs-on: ubuntu-latest
    
    # Configurar timezone
    defaults:
      run:
        shell: bash
    
    steps:
    - name: Configurar Timezone
      run: |
        sudo timedatectl set-timezone America/Sao_Paulo
        echo "Timezone configurado: $(date)"
    
    - name: Checkout do c√≥digo
      uses: actions/checkout@v4
      
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Instalar depend√™ncias do sistema
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libxss1 \
          libasound2t64 \
          libatspi2.0-0 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0
    
    - name: Instalar depend√™ncias Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install playwright
        playwright install chromium
        # Instalar depend√™ncias do Playwright manualmente (evitar libasound2)
        sudo apt-get install -y \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxrandr2 \
          libgbm1 \
          libxss1 \
          libasound2t64 \
          libatspi2.0-0 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0
    
    - name: Configurar vari√°veis de ambiente
      run: |
        echo "SUPABASE_HOST=${{ secrets.SUPABASE_HOST }}" >> $GITHUB_ENV
        echo "SUPABASE_PORT=${{ secrets.SUPABASE_PORT }}" >> $GITHUB_ENV
        echo "SUPABASE_DATABASE=${{ secrets.SUPABASE_DATABASE }}" >> $GITHUB_ENV
        echo "SUPABASE_USER=${{ secrets.SUPABASE_USER }}" >> $GITHUB_ENV
        echo "SUPABASE_PASSWORD=${{ secrets.SUPABASE_PASSWORD }}" >> $GITHUB_ENV
        echo "GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }}" >> $GITHUB_ENV
        echo "GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}" >> $GITHUB_ENV
    
    - name: Executar Relat√≥rio Di√°rio
      run: |
        echo "Iniciando relat√≥rio di√°rio de agendamentos..."
        echo "Hor√°rio atual: $(date)"
        echo "Destinat√°rios: cleiton.sanches@precisionsolucoes.com, controladoria@gestaogt.onmicrosoft.com"
        
        # Executar o script de relat√≥rio
        python send_daily_agenda_report.py
        
        echo "Relat√≥rio di√°rio conclu√≠do!"
    
    - name: Verificar logs
      run: |
        echo "Verificando execu√ß√£o do relat√≥rio:"
        echo "Data/Hora: $(date)"
        echo "Status: Relat√≥rio di√°rio executado"
    
    - name: Upload de logs (se houver erro)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: daily-report-logs-${{ github.run_number }}
        path: |
          *.log
          debug_*.png
        retention-days: 7
    
    - name: Notificar sucesso
      if: success()
      run: |
        echo "‚úÖ Relat√≥rio Di√°rio de Agendamentos executado com sucesso!"
        echo "üìÖ Data/Hora: $(date)"
        echo "üìß E-mails enviados para:"
        echo "   - cleiton.sanches@precisionsolucoes.com"
        echo "   - controladoria@gestaogt.onmicrosoft.com"
        echo "üîÑ Pr√≥xima execu√ß√£o: Segunda-feira √†s 17:30 BRT"
    
    - name: Notificar falha
      if: failure()
      run: |
        echo "‚ùå Relat√≥rio Di√°rio de Agendamentos falhou!"
        echo "üìÖ Data/Hora: $(date)"
        echo "üîç Verifique os logs para mais detalhes"
